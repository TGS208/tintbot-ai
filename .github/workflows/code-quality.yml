name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better analysis
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check dependencies for vulnerabilities
        run: npm audit --production || true
      
      - name: Check for outdated dependencies
        run: npm outdated || true
      
      - name: Verify package.json scripts
        run: |
          echo "### Package.json Scripts üìú" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Available scripts:" >> $GITHUB_STEP_SUMMARY
          node -e "const pkg = require('./package.json'); Object.keys(pkg.scripts).forEach(s => console.log('- ' + s + ': ' + pkg.scripts[s]))" >> $GITHUB_STEP_SUMMARY
      
      - name: Check file sizes
        run: |
          echo "### Repository Stats üìä" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**File counts:**" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript/TSX: $(find src -name '*.ts' -o -name '*.tsx' | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- JavaScript: $(find . -name '*.js' -not -path './node_modules/*' -not -path './dist/*' | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- CSS: $(find . -name '*.css' -not -path './node_modules/*' -not -path './dist/*' | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Largest files:**" >> $GITHUB_STEP_SUMMARY
          find src scripts -type f \( -name '*.ts' -o -name '*.tsx' -o -name '*.js' \) -exec du -h {} + | sort -rh | head -10 >> $GITHUB_STEP_SUMMARY || true
      
      - name: Verify build configuration
        run: |
          echo "### Build Configuration ‚öôÔ∏è" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Configuration files present:**" >> $GITHUB_STEP_SUMMARY
          for file in netlify.toml package.json tsconfig.json tailwind.config.js render.yaml; do
            if [ -f "$file" ]; then
              echo "- ‚úÖ $file" >> $GITHUB_STEP_SUMMARY
            else
              echo "- ‚ùå $file (missing)" >> $GITHUB_STEP_SUMMARY
            fi
          done
      
      - name: Check for security issues in code
        run: |
          echo "Checking for common security issues..."
          # Check for exposed secrets patterns (basic check)
          ! grep -r -i "api[_-]key.*=.*['\"][a-zA-Z0-9]" src/ scripts/ || echo "‚ö†Ô∏è Potential API key found"
          ! grep -r -i "password.*=.*['\"][^*]" src/ scripts/ || echo "‚ö†Ô∏è Potential password found"
          echo "‚úÖ Basic security check complete"
