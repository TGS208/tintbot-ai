[build]
  publish = "dist"
  command = "npm run build:prod"
  functions = "netlify/functions"

[build.environment]
  NODE_VERSION = "18"
  NODE_OPTIONS = "--max-old-space-size=4096"

# Enable Netlify processing optimizations
[build.processing]
  skip_processing = false
  
[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

# Form handling with spam protection
[[forms]]
  name = "business-assessment-leads"

[[forms]]
  name = "newsletter"

[[forms]]
  name = "partnership-inquiry"
  
[[forms]]
  name = "contact"

# Enable Netlify Analytics (requires enabling in dashboard)
[dev]
  command = "npm run dev"
  port = 3000
  publish = "dist"
  autoLaunch = false

# Enhanced security and performance headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "SAMEORIGIN"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "geolocation=(), microphone=(), camera=()"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    # Content Security Policy - adjust as needed
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.tailwindcss.com https://unpkg.com https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.tailwindcss.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://www.google-analytics.com https://*.netlify.app; frame-src 'self' https://www.canva.com;"

# Static asset caching with immutable
[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"

[[headers]]
  for = "*.woff"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"

# Image optimization
[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.webp"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Manifest and service worker
[[headers]]
  for = "/manifest.json"
  [headers.values]
    Cache-Control = "public, max-age=3600"
    Content-Type = "application/manifest+json"

[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
    Content-Type = "application/javascript"

# SEO files
[[headers]]
  for = "/robots.txt"
  [headers.values]
    Cache-Control = "public, max-age=3600"

[[headers]]
  for = "/sitemap.xml"
  [headers.values]
    Cache-Control = "public, max-age=3600"
    Content-Type = "application/xml"

# API endpoints - prioritize over SPA routing
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200

# Pretty URLs (without .html extension)
[[redirects]]
  from = "/features"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/demo"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/pricing"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/assessment"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/contact"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/whitelabel"
  to = "/index.html"
  status = 200

# SPA routing fallback (must be last)
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Optional: 404 page (if you create one)
# [[redirects]]
#   from = "/*"
#   to = "/404.html"
#   status = 404
